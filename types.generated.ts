// Code generated by prismic-ts-codegen. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Item in *People → people*
 */
export interface PeopleDocumentDataPeopleItem {
  /**
   * headshot field in *People → people*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: people.people[].headshot
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  headshot: prismic.ImageField<never>;

  /**
   * name field in *People → people*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: people.people[].name
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  name: prismic.TitleField;

  /**
   * role field in *People → people*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: people.people[].role
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  role: prismic.RichTextField;

  /**
   * email field in *People → people*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: people.people[].email
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  email: prismic.RichTextField;

  /**
   * github field in *People → people*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: people.people[].github
   * - **Documentation**: https://prismic.io/docs/field#embed
   */
  github: prismic.EmbedField;

  /**
   * linkedin field in *People → people*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: people.people[].linkedin
   * - **Documentation**: https://prismic.io/docs/field#embed
   */
  linkedin: prismic.EmbedField;

  /**
   * website field in *People → people*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: people.people[].website
   * - **Documentation**: https://prismic.io/docs/field#embed
   */
  website: prismic.EmbedField;
}

/**
 * Content for People documents
 */
interface PeopleDocumentData {
  /**
   * people field in *People*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: people.people[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  people: prismic.GroupField<Simplify<PeopleDocumentDataPeopleItem>>;
}

/**
 * People document from Prismic
 *
 * - **API ID**: `people`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PeopleDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<PeopleDocumentData>,
    "people",
    Lang
  >;

/**
 * Content for Person documents
 */
interface PersonDocumentData {
  /**
   * Headshot field in *Person*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: person.headshot
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  headshot: prismic.ImageField<never>;

  /**
   * Name field in *Person*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: person.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  name: prismic.TitleField;

  /**
   * role field in *Person*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: person.role
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  role: prismic.TitleField;

  /**
   * github field in *Person*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: person.github
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#embed
   */
  github: prismic.EmbedField;
}

/**
 * Person document from Prismic
 *
 * - **API ID**: `person`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PersonDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<PersonDocumentData>,
    "person",
    Lang
  >;

export type AllDocumentTypes = PeopleDocument | PersonDocument;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      PeopleDocument,
      PeopleDocumentData,
      PeopleDocumentDataPeopleItem,
      PersonDocument,
      PersonDocumentData,
      AllDocumentTypes,
    };
  }
}
